//    Copyright 2018 Tyler Laing
// 
//    Licensed under the Apache License, Version 2.0 (the "License");
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
// 
//        http://www.apache.org/licenses/LICENSE-2.0
// 
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.

use winapi::um::oaidl::{IDispatch, IDispatchVtbl};
use winapi::shared::winerror::HRESULT;
use winapi::shared::wtypes::BSTR;

RIDL!{#[uuid(0x80031d2a, 0xad59, 0x3fb4, 0x97, 0xf3, 0xb8, 0x64, 0xd7, 0x1d, 0xa8, 0x6b)]
interface ISoapXsd(ISoapXsdVtbl): IDispatch(IDispatchVtbl)  
{
    fn GetXsdType(
        pRetVal: BSTR ,
    ) -> HRESULT,
}}

RIDL!{#[uuid(0x1738adbc, 0x156e, 0x3897, 0x84, 0x4f, 0xc3, 0x14, 0x7c, 0x52, 0x8d, 0xea)]
interface _SoapDateTime(_SoapDateTimeVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0x7ef50ddb, 0x32a5, 0x30a1, 0xb4, 0x12, 0x47, 0xfa, 0xb9, 0x11, 0x40, 0x4a)]
interface _SoapDuration(_SoapDurationVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0xa3bf0bcd, 0xec32, 0x38e6, 0x92, 0xf2, 0x5f, 0x37, 0xba, 0xd8, 0x03, 0x0d)]
interface _SoapTime(_SoapTimeVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0xcfa6e9d2, 0xb3de, 0x39a6, 0x94, 0xd1, 0xcc, 0x69, 0x1d, 0xe1, 0x93, 0xf8)]
interface _SoapDate(_SoapDateVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0x103c7ef9, 0xa9ee, 0x35fb, 0x84, 0xc5, 0x30, 0x86, 0xc9, 0x72, 0x5a, 0x20)]
interface _SoapYearMonth(_SoapYearMonthVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0xc20769f3, 0x858d, 0x316a, 0xbe, 0x6d, 0xc3, 0x47, 0xa4, 0x79, 0x48, 0xad)]
interface _SoapYear(_SoapYearVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0xf9ead0aa, 0x4156, 0x368f, 0xae, 0x05, 0xfd, 0x59, 0xd7, 0x0f, 0x75, 0x8d)]
interface _SoapMonthDay(_SoapMonthDayVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0xd9e8314d, 0x5053, 0x3497, 0x8a, 0x33, 0x97, 0xd3, 0xdc, 0xfe, 0x33, 0xe2)]
interface _SoapDay(_SoapDayVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0xb4e32423, 0xe473, 0x3562, 0xaa, 0x12, 0x62, 0xfd, 0xe5, 0xa7, 0xd4, 0xa2)]
interface _SoapMonth(_SoapMonthVtbl): IDispatch(IDispatchVtbl)  
{}}


RIDL!{#[uuid(0x63b9da95, 0xfb91, 0x358a, 0xb7, 0xb7, 0x90, 0xc3, 0x4a, 0xa3, 0x4a, 0xb7)]
interface _SoapHexBinary(_SoapHexBinaryVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0x8ed115a1, 0x5e7b, 0x34dc, 0xab, 0x85, 0x90, 0x31, 0x6f, 0x28, 0x01, 0x5d)]
interface _SoapBase64Binary(_SoapBase64BinaryVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0x30c65c40, 0x4e54, 0x3051, 0x9d, 0x8f, 0x47, 0x09, 0xb6, 0xab, 0x21, 0x4c)]
interface _SoapInteger(_SoapIntegerVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0x4979ec29, 0xc2b7, 0x3ad6, 0x98, 0x6d, 0x5a, 0xaf, 0x73, 0x44, 0xcc, 0x4e)]
interface _SoapPositiveInteger(_SoapPositiveIntegerVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0xaaf5401e, 0xf71c, 0x3fe3, 0x8a, 0x73, 0xa2, 0x50, 0x74, 0xb2, 0x0d, 0x3a)]
interface _SoapNonPositiveInteger(_SoapNonPositiveIntegerVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0xbc261fc6, 0x7132, 0x3fb5, 0x9a, 0xac, 0x22, 0x48, 0x45, 0xd3, 0xaa, 0x99)]
interface _SoapNonNegativeInteger(_SoapNonNegativeIntegerVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0xe384aa10, 0xa70c, 0x3943, 0x97, 0xcf, 0x0f, 0x7c, 0x28, 0x2c, 0x3b, 0xdc)]
interface _SoapNegativeInteger(_SoapNegativeIntegerVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0x818ec118, 0xbe7e, 0x3cde, 0x92, 0xc8, 0x44, 0xb9, 0x91, 0x60, 0x92, 0x0e)]
interface _SoapAnyUri(_SoapAnyUriVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0x3ac646b6, 0x6b84, 0x382f, 0x9a, 0xed, 0x22, 0xc2, 0x43, 0x32, 0x44, 0xe6)]
interface _SoapQName(_SoapQNameVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0x974f01f4, 0x6086, 0x3137, 0x94, 0x48, 0x6a, 0x31, 0xfc, 0x9b, 0xef, 0x08)]
interface _SoapNotation(_SoapNotationVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0xf4926b50, 0x3f23, 0x37e0, 0x9a, 0xfa, 0xaa, 0x91, 0xff, 0x89, 0xa7, 0xbd)]
interface _SoapNormalizedString(_SoapNormalizedStringVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0xab4e97b9, 0x651d, 0x36f4, 0xaa, 0xba, 0x28, 0xac, 0xf5, 0x74, 0x66, 0x24)]
interface _SoapToken(_SoapTokenVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0x14aed851, 0xa168, 0x3462, 0xb8, 0x77, 0x8f, 0x9a, 0x01, 0x12, 0x66, 0x53)]
interface _SoapLanguage(_SoapLanguageVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0x5eb06bef, 0x4adf, 0x3cc1, 0xa6, 0xf2, 0x62, 0xf7, 0x68, 0x86, 0xb1, 0x3a)]
interface _SoapName(_SoapNameVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0x7947a829, 0xadb5, 0x34d0, 0x9c, 0xc8, 0x6c, 0x17, 0x27, 0x42, 0xc8, 0x03)]
interface _SoapIdrefs(_SoapIdrefsVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0xaca96da3, 0x96ed, 0x397e, 0x8a, 0x72, 0xee, 0x1b, 0xe1, 0x02, 0x5f, 0x5e)]
interface _SoapEntities(_SoapEntitiesVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0xe941fa15, 0xe6c8, 0x3dd4, 0xb0, 0x60, 0xc0, 0xdd, 0xfb, 0xc0, 0x24, 0x0a)]
interface _SoapNmtoken(_SoapNmtokenVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0xa5e385ae, 0x27fb, 0x3708, 0xba, 0xf7, 0x0b, 0xf1, 0xf3, 0x95, 0x57, 0x47)]
interface _SoapNmtokens(_SoapNmtokensVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0x725cdaf7, 0xb739, 0x35c1, 0x84, 0x63, 0xe2, 0xa9, 0x23, 0xe1, 0xf6, 0x18)]
interface _SoapNcName(_SoapNcNameVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0x6a46b6a2, 0x2d2c, 0x3c67, 0xaf, 0x67, 0xaa, 0xe0, 0x17, 0x5f, 0x17, 0xae)]
interface _SoapId(_SoapIdVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0x7db7fd83, 0xde89, 0x38e1, 0x96, 0x45, 0xd4, 0xca, 0xbd, 0xe6, 0x94, 0xc0)]
interface _SoapIdref(_SoapIdrefVtbl): IDispatch(IDispatchVtbl)  
{}}

RIDL!{#[uuid(0x37171746, 0xb784, 0x3586, 0xa7, 0xd5, 0x69, 0x2a, 0x76, 0x04, 0xa6, 0x6b)]
interface _SoapEntity(_SoapEntityVtbl): IDispatch(IDispatchVtbl)  
{}}

//they all implement ISoapXsd